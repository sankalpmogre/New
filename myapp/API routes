// app/api/products/route.js
import { prisma } from "@/lib/db"
import { generateDescription } from "@/lib/gemini"

export async function GET() {
  const products = await prisma.product.findMany({ orderBy: { createdAt: "desc" } })
  return new Response(JSON.stringify(products))
}

export async function POST(req) {
  const { name, price, prompt } = await req.json()
  if (!name || !price) return new Response("Missing fields", { status: 400 })

  const description = prompt ? await generateDescription(prompt) : ""
  const product = await prisma.product.create({
    data: { name, price: parseFloat(price), description }
  })
  return new Response(JSON.stringify(product))
}
// app/api/products/[id]/route.js
import { prisma } from "@/lib/db"

export async function GET({ params }) {
  return new Response(JSON.stringify(
    await prisma.product.findUnique({ where: { id: params.id } })
  ))
}

export async function PATCH({ params, request }) {
  const data = await request.json()
  return new Response(JSON.stringify(
    await prisma.product.update({ where: { id: params.id }, data })
  ))
}

export async function DELETE({ params }) {
  await prisma.product.delete({ where: { id: params.id } })
  return new Response("Deleted")
}
